// src/layouts/DashboardLayout.tsx
import { Outlet } from 'react-router-dom';
import { useState } from 'react';
import { DashboardNavbar } from '../components/DashboardNavbar';
import { DashboardFooter } from '../components/DashboardFooter';
import { MessageCircle, X, Globe } from 'lucide-react';

// Define the type for our language codes
type Language = 'en' | 'hi' | 'mr' | 'pa' | 'bn' | 'ta';

export function DashboardLayout() {
  const [isChatOpen, setIsChatOpen] = useState(false);
  const [language, setLanguage] = useState<Language>('en');
  const [messages, setMessages] = useState<{ sender: string; text: string }[]>([]);
  const [input, setInput] = useState('');

  // --- Expanded Translation Map ---
  const translations = {
    en: {
      greeting: 'Hi there! IтАЩm your Kisan Saathi assistant.',
      help: 'You can ask me about crop plans, irrigation, disease control, fertilizers, and more!',
      crop: 'ЁЯМ╛ Based on your region, Wheat and Mustard are great options for this season!',
      irrigation: 'ЁЯТз For wheat, follow 4 irrigation cycles at tillering, jointing, flowering, and dough stages.',
      disease: 'ЁЯжа Possible disease: Leaf rust. Cure with Mancozeb spray (0.25%) every 10 days.',
      fertilizer: 'ЁЯМ┐ Recommended fertilizer: Urea (120kg/ha) + DAP (60kg/ha) split in 3 doses.',
      community: 'ЁЯСе You can join your nearby farmer community group for market updates and training sessions.',
      training: 'ЁЯУШ Upcoming training: тАЬAdvanced Organic FarmingтАЭ on Nov 5th at your nearest KVK center.',
      default: 'ЁЯдЦ IтАЩm not sure about that, but I can help with crops, irrigation, fertilizer, or disease info!',
      hello: 'Hey there! How can I help you today? ЁЯШК',
      placeholder: 'Type your message...',
      send: 'Send',
      assistantName: 'Kisan Saathi Assistant',
    },
    hi: {
      greeting: 'ЁЯСЛ рдирдорд╕реНрддреЗ! рдореИрдВ рдЖрдкрдХрд╛ рдХрд┐рд╕рд╛рди рд╕рд╛рдереА рд╕рд╣рд╛рдпрдХ рд╣реВрдБред',
      help: 'рдЖрдк рдореБрдЭрд╕реЗ рдлрд╕рд▓ рдпреЛрдЬрдирд╛рдУрдВ, рд╕рд┐рдВрдЪрд╛рдИ, рд░реЛрдЧ рдирд┐рдпрдВрддреНрд░рдг, рдЙрд░реНрд╡рд░рдХ рдФрд░ рдЕрдиреНрдп рд╡рд┐рд╖рдпреЛрдВ рдкрд░ рдкреВрдЫ рд╕рдХрддреЗ рд╣реИрдВ!',
      crop: 'ЁЯМ╛ рдЖрдкрдХреЗ рдХреНрд╖реЗрддреНрд░ рдХреЗ рдЕрдиреБрд╕рд╛рд░, рдЗрд╕ рдореМрд╕рдо рдХреЗ рд▓рд┐рдП рдЧреЗрд╣реВрдБ рдФрд░ рд╕рд░рд╕реЛрдВ рд╕рдмрд╕реЗ рдЕрдЪреНрдЫреЗ рд╡рд┐рдХрд▓реНрдк рд╣реИрдВ!',
      irrigation: 'ЁЯТз рдЧреЗрд╣реВрдБ рдХреЗ рд▓рд┐рдП 4 рд╕рд┐рдВрдЪрд╛рдИ рдЪрдХреНрд░ рдХрд░реЗрдВ тАУ рдЯрд┐рд▓рд░рд┐рдВрдЧ, рдЬреЙрдЗрдиреНрдЯрд┐рдВрдЧ, рдлреВрд▓ рдЖрдиреЗ рдФрд░ рдЖрдЯреЗ рдХреЗ рдЪрд░рдг рдореЗрдВред',
      disease: 'ЁЯжа рд╕рдВрднрд╛рд╡рд┐рдд рд░реЛрдЧ: рд▓реАрдл рд░рд╕реНрдЯред рдЗрд▓рд╛рдЬ: рдореИрдВрдХреЛрдЬрд╝реЗрдм (0.25%) рдХрд╛ рдЫрд┐рдбрд╝рдХрд╛рд╡ рд╣рд░ 10 рджрд┐рди рдореЗрдВ рдХрд░реЗрдВред',
      fertilizer: 'ЁЯМ┐ рдЕрдиреБрд╢рдВрд╕рд┐рдд рдЙрд░реНрд╡рд░рдХ: рдпреВрд░рд┐рдпрд╛ (120 рдХрд┐рдЧреНрд░рд╛/рд╣реЗрдХреНрдЯреЗрдпрд░) + рдбреАрдПрдкреА (60 рдХрд┐рдЧреНрд░рд╛/рд╣реЗрдХреНрдЯреЗрдпрд░) рддреАрди рднрд╛рдЧреЛрдВ рдореЗрдВред',
      community: 'ЁЯСе рдЖрдк рдкрд╛рд╕ рдХреЗ рдХрд┐рд╕рд╛рди рд╕рдореБрджрд╛рдп рд╕рдореВрд╣ рд╕реЗ рдЬреБрдбрд╝ рд╕рдХрддреЗ рд╣реИрдВ рдмрд╛рдЬрд╛рд░ рдЕрдкрдбреЗрдЯ рдФрд░ рдкреНрд░рд╢рд┐рдХреНрд╖рдг рдХреЗ рд▓рд┐рдПред',
      training: 'ЁЯУШ рдЖрдЧрд╛рдореА рдкреНрд░рд╢рд┐рдХреНрд╖рдг: "рдПрдбрд╡рд╛рдВрд╕реНрдб рдСрд░реНрдЧреЗрдирд┐рдХ рдлрд╛рд░реНрдорд┐рдВрдЧ" 5 рдирд╡рдВрдмрд░ рдХреЛ рдирд┐рдХрдЯрддрдо рдХреЗрд╡реАрдХреЗ рдХреЗрдВрджреНрд░ рдореЗрдВред',
      default: 'ЁЯдЦ рдореБрдЭреЗ рдЗрд╕ рдмрд╛рд░реЗ рдореЗрдВ рдкрдХреНрдХрд╛ рдирд╣реАрдВ рд╣реИ, рдкрд░ рдореИрдВ рдлрд╕рд▓, рд╕рд┐рдВрдЪрд╛рдИ рдпрд╛ рдЙрд░реНрд╡рд░рдХ рдХреА рдЬрд╛рдирдХрд╛рд░реА рджреЗ рд╕рдХрддрд╛ рд╣реВрдБ!',
      hello: 'рдирдорд╕реНрддреЗ! рдореИрдВ рдЖрдкрдХреА рдХреИрд╕реЗ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдБ? ЁЯШК',
      placeholder: 'рдЕрдкрдирд╛ рд╕рдВрджреЗрд╢ рд▓рд┐рдЦреЗрдВ...',
      send: 'рднреЗрдЬреЗрдВ',
      assistantName: 'рдХрд┐рд╕рд╛рди рд╕рд╛рдереА рд╕рд╣рд╛рдпрдХ',
    },
    mr: {
      greeting: 'ЁЯСЛ рдирдорд╕реНрдХрд╛рд░! рдореА рддреБрдордЪрд╛ рдХрд┐рд╕рд╛рди рд╕рд╛рдереА рд╕рд╣рд╛рдпреНрдпрдХ рдЖрд╣реЗ.',
      help: 'рддреБрдореНрд╣реА рдорд▓рд╛ рдкрд┐рдХ рдпреЛрдЬрдирд╛, рд╕рд┐рдВрдЪрди, рд░реЛрдЧ рдирд┐рдпрдВрддреНрд░рдг, рдЦрдд рд╡ рдЗрддрд░ рдЧреЛрд╖реНрдЯреАрдВрдмрджреНрджрд▓ рд╡рд┐рдЪрд╛рд░реВ рд╢рдХрддрд╛!',
      crop: 'ЁЯМ╛ рддреБрдордЪреНрдпрд╛ рдкреНрд░рджреЗрд╢рд╛рд╕рд╛рдареА рдпрд╛ рд╣рдВрдЧрд╛рдорд╛рдд рдЧрд╣реВ рдЖрдгрд┐ рдореЛрд╣рд░реА рдЙрддреНрддрдо рдкрд░реНрдпрд╛рдп рдЖрд╣реЗрдд!',
      irrigation: 'ЁЯТз рдЧрд╡реНрд╣рд╛рд╕рд╛рдареА 4 рд╕рд┐рдВрдЪрди рдЪрдХреНрд░ рдХрд░рд╛ тАУ рдЯрд┐рд▓рд░рд┐рдВрдЧ, рдЬреЙрдЗрдиреНрдЯрд┐рдВрдЧ, рдлреБрд▓реЛрд░рд╛ рдЖрдгрд┐ рдбреЛрд╣ рдЯрдкреНрдкреНрдпрд╛рдд.',
      disease: 'ЁЯжа рд╕рдВрднрд╛рд╡реНрдп рд░реЛрдЧ: рд▓реАрдл рд░рд╕реНрдЯ. рдЙрдкрд╛рдп: рдореЕрдиреНрдХреЛрдЭреЗрдм (0.25%) рдлрд╡рд╛рд░рдгреА рджрд░ 10 рджрд┐рд╡рд╕рд╛рдВрдиреА рдХрд░рд╛.',
      fertilizer: 'ЁЯМ┐ рд╢рд┐рдлрд╛рд░рд╕ рдХреЗрд▓реЗрд▓реЗ рдЦрдд: рдпреБрд░рд┐рдпрд╛ (120kg/ha) + DAP (60kg/ha) рддреАрди рднрд╛рдЧрд╛рдВрдд рджреНрдпрд╛.',
      community: 'ЁЯСе рдмрд╛рдЬрд╛рд░ рдЕрджреНрдпрддрди рдЖрдгрд┐ рдкреНрд░рд╢рд┐рдХреНрд╖рдгрд╛рд╕рд╛рдареА рдЬрд╡рд│рдЪреНрдпрд╛ рд╢реЗрддрдХрд░реА рд╕рдореБрджрд╛рдп рд╕рдореВрд╣рд╛рдд рд╕рд╛рдореАрд▓ рд╡реНрд╣рд╛.',
      training: 'ЁЯУШ рдЖрдЧрд╛рдореА рдкреНрд░рд╢рд┐рдХреНрд╖рдг: "рдкреНрд░рдЧрдд рд╕реЗрдВрджреНрд░рд┐рдп рд╢реЗрддреА" 5 рдиреЛрд╡реНрд╣реЗрдВрдмрд░ рд░реЛрдЬреА рддреБрдордЪреНрдпрд╛ рдЬрд╡рд│рдЪреНрдпрд╛ KVK рдХреЗрдВрджреНрд░рд╛рдд.',
      default: 'ЁЯдЦ рдорд▓рд╛ рдЦрд╛рддреНрд░реА рдирд╛рд╣реА, рдкрдг рдореА рдкрд┐рдХ, рд╕рд┐рдВрдЪрди, рдЦрдд рдХрд┐рдВрд╡рд╛ рд░реЛрдЧ рдорд╛рд╣рд┐рддреА рджреЗрдК рд╢рдХрддреЛ!',
      hello: 'рдирдорд╕реНрдХрд╛рд░! рдореА рддреБрдореНрд╣рд╛рд▓рд╛ рдХрд╢рд╛рдд рдорджрдд рдХрд░реВ рд╢рдХрддреЛ? ЁЯШК',
      placeholder: 'рддреБрдордЪрд╛ рд╕рдВрджреЗрд╢ рдЯрд╛рдЗрдк рдХрд░рд╛...',
      send: 'рдкрд╛рдард╡рд╛',
      assistantName: 'рдХрд┐рд╕рд╛рди рд╕рд╛рдереА рд╕рд╣рд╛рдпреНрдпрдХ',
    },
    pa: {
      greeting: 'ЁЯСЛ ри╕рид ри╕рйНри░рйА риЕриХри╛ри▓! риорйИриВ ридрйБри╣ри╛рибри╛ риХри┐ри╕ри╛рии ри╕ри╛риерйА ри╕ри╣ри╛риЗриХ ри╣ри╛риВред',
      help: 'ридрйБри╕рйАриВ риорйИриирйВрй░ рилри╕ри▓ рипрйЛриЬриири╛ри╡ри╛риВ, ри╕ри┐рй░риЪри╛риИ, римри┐риори╛ри░рйА риири┐рипрй░ридри░риг, риЦри╛рижри╛риВ риЕридрйЗ ри╣рйЛри░ римри╣рйБрид риХрйБриЭ римри╛ри░рйЗ рикрйБрй▒риЫ ри╕риХрижрйЗ ри╣рйЛ!',
      crop: 'ЁЯМ╛ ридрйБри╣ри╛рибрйЗ риЦрйЗридри░ рижрйЗ риЕриирйБри╕ри╛ри░, риЗри╕ риорйМри╕рио ри▓риИ риХригриХ риЕридрйЗ ри╕ри░рйНри╣рйЛриВ ри╡ризрйАриЖ ри╡ри┐риХри▓рик ри╣рии!',
      irrigation: 'ЁЯТз риХригриХ ри▓риИ, 4 ри╕ри┐рй░риЪри╛риИ риЪрй▒риХри░ри╛риВ рижрйА рикри╛ри▓ригри╛ риХри░рйЛ - риЯри┐ри▓ри░ри┐рй░риЧ, риЬрйБриЖриЗрй░риЯри┐рй░риЧ, рилрйБрй▒ри▓ риЖриЙриг риЕридрйЗ рижри╛ригрйЗ римригрии рижрйЗ рикрйЬри╛ри╡ри╛риВ ридрйЗред',
      disease: 'ЁЯжа ри╕рй░ринри╛ри╡ри┐рид римри┐риори╛ри░рйА: рикрй▒ридри┐риЖриВ рижрйА риХрйБрй░риЧрйАред риЗри▓ри╛риЬ: риорйИриириХрйЛриЬри╝рйЗрим (0.25%) рижри╛ риЫри┐рйЬриХри╛риЕ ри╣ри░ 10 рижри┐риири╛риВ римри╛риЕриж риХри░рйЛред',
      fertilizer: 'ЁЯМ┐ ри╕ри┐рилри╝ри╛ри░ри╕ри╝рйА риЦри╛риж: рипрйВри░рйАриЖ (120kg/ha) + DAP (60kg/ha) 3 риЦрйБри░ри╛риХри╛риВ ри╡ри┐рй▒риЪ ри╡рй░риб риХрйЗ рижри┐риУред',
      community: 'ЁЯСе ридрйБри╕рйАриВ риори╛ри░риХрйАриЯ риЕрикрибрйЗриЯри╛риВ риЕридрйЗ ри╕ри┐риЦри▓ри╛риИ ри╕рйИри╕ри╝риири╛риВ ри▓риИ риЖрикригрйЗ риирйЗрйЬри▓рйЗ риХри┐ри╕ри╛рии ринри╛риИриЪри╛ри░рйЗ ри╕риорйВри╣ ри╡ри┐рй▒риЪ ри╕ри╝ри╛риори▓ ри╣рйЛ ри╕риХрижрйЗ ри╣рйЛред',
      training: 'ЁЯУШ риЖриЧри╛риорйА ри╕ри┐риЦри▓ри╛риИ: "риЙрй▒риирид риЬрйИри╡ри┐риХ риЦрйЗридрйА" 5 риири╡рй░римри░ риирйВрй░ ридрйБри╣ри╛рибрйЗ риириЬри╝рижрйАриХрйА KVK риХрйЗриВрижри░ ри╡ри┐риЦрйЗред',
      default: 'ЁЯдЦ риорйИриирйВрй░ риЗри╕ римри╛ри░рйЗ риприХрйАрии риири╣рйАриВ ри╣рйИ, рикри░ риорйИриВ рилри╕ри▓ри╛риВ, ри╕ри┐рй░риЪри╛риИ, риЦри╛риж риЬри╛риВ римри┐риори╛ри░рйА римри╛ри░рйЗ риЬри╛ригриХри╛ри░рйА рижрйЗ ри╕риХрижри╛ ри╣ри╛риВ!',
      hello: 'ри╕рид ри╕рйНри░рйА риЕриХри╛ри▓! риЕрй▒риЬ риорйИриВ ридрйБри╣ри╛рибрйА риХри┐ри╡рйЗриВ риорижриж риХри░ ри╕риХрижри╛ ри╣ри╛риВ? ЁЯШК',
      placeholder: 'риЖрикригри╛ ри╕рйБриирйЗри╣ри╛ риЯри╛риИрик риХри░рйЛ...',
      send: 'ринрйЗриЬрйЛ',
      assistantName: 'риХри┐ри╕ри╛рии ри╕ри╛риерйА ри╕ри╣ри╛риЗриХ',
    },
    bn: {
      greeting: 'ЁЯСЛ ржиржорж╕рзНржХрж╛рж░! ржЖржорж┐ ржЖржкржирж╛рж░ ржХрж┐рж╕рж╛ржи рж╕рж╛ржерзА рж╕рж╣ржХрж╛рж░рзАред',
      help: 'ржЖржкржирж┐ ржЖржорж╛ржХрзЗ ржлрж╕рж▓ ржкрж░рж┐ржХрж▓рзНржкржирж╛, рж╕рзЗржЪ, рж░рзЛржЧ ржирж┐ржпрж╝ржирзНрждрзНрж░ржг, рж╕рж╛рж░ ржПржмржВ ржЖрж░ржУ ржЕржирзЗржХ ржХрж┐ржЫрзБ рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛ ржХрж░рждрзЗ ржкрж╛рж░рзЗржи!',
      crop: 'ЁЯМ╛ ржЖржкржирж╛рж░ ржЕржЮрзНржЪрж▓рзЗрж░ ржЙржкрж░ ржнрж┐рждрзНрждрж┐ ржХрж░рзЗ, ржПржЗ ржорзМрж╕рзБржорзЗрж░ ржЬржирзНржп ржЧржо ржПржмржВ рж╕рж░рж┐рж╖рж╛ ржжрзБрж░рзНржжрж╛ржирзНржд ржмрж┐ржХрж▓рзНржк!',
      irrigation: 'ЁЯТз ржЧржорзЗрж░ ржЬржирзНржп, ржЯрж┐рж▓рж╛рж░рж┐ржВ, ржЬржпрж╝рзЗржирзНржЯрж┐ржВ, ржлрзБрж▓ ржлрзЛржЯрж╛ ржПржмржВ ржжрж╛ржирж╛ ржЧржаржирзЗрж░ ржкрж░рзНржпрж╛ржпрж╝рзЗ рзкржЯрж┐ рж╕рзЗржЪ ржЪржХрзНрж░ ржЕржирзБрж╕рж░ржг ржХрж░рзБржиред',
      disease: 'ЁЯжа рж╕ржорзНржнрж╛ржмрзНржп рж░рзЛржЧ: ржкрж╛рждрж╛рж░ ржорж░рж┐ржЪрж╛ред ржкрзНрж░рждрж┐ржХрж╛рж░: ржорзНржпрж╛ржиржХрзЛржЬрзЗржм рж╕рзНржкрзНрж░рзЗ (0.25%) ржкрзНрж░рждрж┐ рззрзж ржжрж┐ржи ржЕржирзНрждрж░ ржХрж░рзБржиред',
      fertilizer: 'ЁЯМ┐ ржкрзНрж░рж╕рзНрждрж╛ржмрж┐ржд рж╕рж╛рж░: ржЗржЙрж░рж┐ржпрж╝рж╛ (120 ржХрзЗржЬрж┐/рж╣рзЗржХрзНржЯрж░) + ржбрж┐ржПржкрж┐ (60 ржХрзЗржЬрж┐/рж╣рзЗржХрзНржЯрж░) рзйржЯрж┐ ржбрзЛржЬрзЗ ржмрж┐ржнржХрзНрждред',
      community: 'ЁЯСе ржЖржкржирж┐ ржмрж╛ржЬрж╛рж░рзЗрж░ ржЖржкржбрзЗржЯ ржПржмржВ ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг рж╕рзЗрж╢ржирзЗрж░ ржЬржирзНржп ржЖржкржирж╛рж░ ржирж┐ржХржЯржмрж░рзНрждрзА ржХрзГрж╖ржХ рж╕ржорзНржкрзНрж░ржжрж╛ржпрж╝рзЗрж░ ржЧрзНрж░рзБржкрзЗ ржпрзЛржЧ ржжрж┐рждрзЗ ржкрж╛рж░рзЗржиред',
      training: 'ЁЯУШ ржЖрж╕ржирзНржи ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг: "ржЙржирзНржиржд ржЬрзИржм ржЪрж╛рж╖" рзлржЗ ржиржнрзЗржорзНржмрж░ ржЖржкржирж╛рж░ ржирж┐ржХржЯрждржо KVK ржХрзЗржирзНржжрзНрж░рзЗред',
      default: 'ЁЯдЦ ржЖржорж┐ ржП ржмрзНржпрж╛ржкрж╛рж░рзЗ ржирж┐рж╢рзНржЪрж┐ржд ржиржЗ, рждржмрзЗ ржЖржорж┐ ржлрж╕рж▓, рж╕рзЗржЪ, рж╕рж╛рж░ ржмрж╛ рж░рзЛржЧрзЗрж░ рждржерзНржп ржжрж┐ржпрж╝рзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рждрзЗ ржкрж╛рж░рж┐!',
      hello: 'ржиржорж╕рзНржХрж╛рж░! ржЖржорж┐ ржЖржЬ ржЖржкржирж╛ржХрзЗ ржХрж┐ржнрж╛ржмрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рждрзЗ ржкрж╛рж░рж┐? ЁЯШК',
      placeholder: 'ржЖржкржирж╛рж░ ржмрж╛рж░рзНрждрж╛ ржЯрж╛ржЗржк ржХрж░рзБржи...',
      send: 'ржкрж╛ржарж╛ржи',
      assistantName: 'ржХрж┐рж╕рж╛ржи рж╕рж╛ржерзА рж╕рж╣ржХрж╛рж░рзА',
    },
    ta: {
      greeting: 'ЁЯСЛ ро╡рогроХрпНроХроорпН! роиро╛ройрпН роЙроЩрпНроХро│рпН роХро┐роЪро╛ройрпН роЪро╛родрпНродро┐ роЙродро╡ро┐ропро╛ро│ро░рпН.',
      help: 'рокропро┐ро░рпН родро┐роЯрпНроЯроЩрпНроХро│рпН, роирпАро░рпНрокрпНрокро╛роЪройроорпН, роирпЛропрпН роХроЯрпНроЯрпБрокрпНрокро╛роЯрпБ, роЙро░роЩрпНроХро│рпН рооро▒рпНро▒рпБроорпН рокро▓ро╡ро▒рпНро▒рпИрокрпН рокро▒рпНро▒ро┐ роирпАроЩрпНроХро│рпН роОройрпНройро┐роЯроорпН роХрпЗроЯрпНроХро▓ро╛роорпН!',
      crop: 'ЁЯМ╛ роЙроЩрпНроХро│рпН рокроХрпБродро┐ропро┐ройрпН роЕроЯро┐рокрпНрокроЯрпИропро┐ро▓рпН, роЗроирпНрод рокро░рпБро╡родрпНродро┐ро▒рпНроХрпБ роХрпЛродрпБроорпИ рооро▒рпНро▒рпБроорпН роХроЯрпБроХрпБ роЪро┐ро▒роирпНрод ро╡ро┐ро░рпБрокрпНрокроЩрпНроХро│рпН!',
      irrigation: 'ЁЯТз роХрпЛродрпБроорпИроХрпНроХрпБ, родрпВро░рпНро╡ро┐роЯрпБроорпН, роХрогрпБро╡ро┐роЯрпБроорпН, рокрпВроХрпНроХрпБроорпН рооро▒рпНро▒рпБроорпН рокро╛ро▓рпН рокро┐роЯро┐роХрпНроХрпБроорпН роиро┐ро▓рпИроХро│ро┐ро▓рпН 4 роирпАро░рпНрокрпНрокро╛роЪрой роЪрпБро┤ро▒рпНроЪро┐роХро│рпИрокрпН рокро┐ройрпНрокро▒рпНро▒ро╡рпБроорпН.',
      disease: 'ЁЯжа роЪро╛родрпНродро┐ропрооро╛рой роирпЛропрпН: роЗро▓рпИродрпН родрпБро░рпБ. ржкрзНрж░рждрж┐ржХро╛ро░роорпН: рооро╛ройрпНроХрпЛроЪрпЖрокрпН родрпЖро│ро┐рокрпНрокрпБ (0.25%) роТро╡рпНро╡рпКро░рпБ 10 роиро╛роЯрпНроХро│рпБроХрпНроХрпБроорпН роТро░рпБроорпБро▒рпИ.',
      fertilizer: 'ЁЯМ┐ рокро░ро┐роирпНродрпБро░рпИроХрпНроХрокрпНрокроЯрпБроорпН роЙро░роорпН: ропрпВро░ро┐ропро╛ (120 роХро┐ро▓рпЛ/ро╣рпЖроХрпНроЯрпЗро░рпН) + роЯро┐роПрокро┐ (60 роХро┐ро▓рпЛ/ро╣рпЖроХрпНроЯрпЗро░рпН) 3 роЕро│ро╡рпБроХро│ро┐ро▓рпН рокро┐ро░ро┐роХрпНроХрокрпНрокроЯрпНроЯродрпБ.',
      community: 'ЁЯСе роЪроирпНродрпИ роиро┐ро▓ро╡ро░роЩрпНроХро│рпН рооро▒рпНро▒рпБроорпН рокропро┐ро▒рпНроЪро┐ роЕрооро░рпНро╡рпБроХро│рпБроХрпНроХрпБ роЙроЩрпНроХро│рпН роЕро░рпБроХро┐ро▓рпБро│рпНро│ роЙро┤ро╡ро░рпН роЪроорпВроХроХрпН роХрпБро┤рпБро╡ро┐ро▓рпН роЪрпЗро░ро▓ро╛роорпН.',
      training: 'ЁЯУШ ро╡ро░ро╡ро┐ро░рпБроХрпНроХрпБроорпН рокропро┐ро▒рпНроЪро┐: "роорпЗроорпНрокроЯрпНроЯ роХро░ро┐роо ро╡рпЗро│ро╛рогрпНроорпИ" роиро╡роорпНрокро░рпН 5 роЖроорпН родрпЗродро┐ роЙроЩрпНроХро│рпН роЕро░рпБроХро┐ро▓рпБро│рпНро│ KVK роорпИропродрпНродро┐ро▓рпН.',
      default: 'ЁЯдЦ роЕродрпИрокрпН рокро▒рпНро▒ро┐ роОройроХрпНроХрпБ роЙро▒рпБродро┐ропро╛роХродрпН родрпЖро░ро┐ропро╡ро┐ро▓рпНро▓рпИ, роЖройро╛ро▓рпН рокропро┐ро░рпНроХро│рпН, роирпАро░рпНрокрпНрокро╛роЪройроорпН, роЙро░роорпН роЕро▓рпНро▓родрпБ роирпЛропрпН рокро▒рпНро▒ро┐роп родроХро╡ро▓рпНроХро│рпБроХрпНроХрпБ роиро╛ройрпН роЙродро╡ роорпБроЯро┐ропрпБроорпН!',
      hello: 'ро╡рогроХрпНроХроорпН! роЗройрпНро▒рпБ роиро╛ройрпН роЙроЩрпНроХро│рпБроХрпНроХрпБ роОрокрпНрокроЯро┐ роЙродро╡ роорпБроЯро┐ропрпБроорпН? ЁЯШК',
      placeholder: 'роЙроЩрпНроХро│рпН роЪрпЖропрпНродро┐ропрпИ родроЯрпНроЯроЪрпНроЪрпБ роЪрпЖропрпНропро╡рпБроорпН...',
      send: 'роЕройрпБрокрпНрокрпБ',
      assistantName: 'роХро┐роЪро╛ройрпН роЪро╛родрпНродро┐ роЙродро╡ро┐ропро╛ро│ро░рпН',
    },
  };

  const initialMessages = [
    { sender: 'bot', text: translations[language].greeting },
    { sender: 'bot', text: translations[language].help },
  ];

  // --- Mock Reply Logic ---
  const getMockReply = (query: string) => {
    const q = query.toLowerCase();
    const t = translations[language];
    if (q.includes('crop') || q.includes('plan')) return t.crop;
    if (q.includes('irrigation') || q.includes('рд╕рд┐рдВрдЪрд╛рдИ')) return t.irrigation;
    if (q.includes('disease') || q.includes('рд░реЛрдЧ')) return t.disease;
    if (q.includes('fertilizer') || q.includes('fertiliser') || q.includes('рдЙрд░реНрд╡рд░рдХ')) return t.fertilizer;
    if (q.includes('community') || q.includes('рд╕рдореБрджрд╛рдп')) return t.community;
    if (q.includes('training') || q.includes('рдкреНрд░рд╢рд┐рдХреНрд╖рдг')) return t.training;
    if (q.includes('hello') || q.includes('hi') || q.includes('рдирдорд╕реНрддреЗ') || q.includes('рдирдорд╕реНрдХрд╛рд░')) return t.hello;
    return t.default;
  };

  const handleSend = () => {
    if (!input.trim()) return;

    const userMsg = { sender: 'user', text: input.trim() };
    const currentMessages = messages.length > 0 ? messages : initialMessages;
    setMessages([...currentMessages, userMsg]);

    setTimeout(() => {
      const botReply = getMockReply(input.trim());
      setMessages((prev) => [...prev, { sender: 'bot', text: botReply }]);
    }, 600);

    setInput('');
  };

  const handleLanguageChange = () => {
    const languages: Language[] = ['en', 'hi', 'mr', 'pa', 'bn', 'ta'];
    const currentIndex = languages.indexOf(language);
    const nextIndex = (currentIndex + 1) % languages.length;
    setLanguage(languages[nextIndex]);
  };

  return (
    <div className="relative flex flex-col min-h-screen">
      <DashboardNavbar />
      <main className="grow">
        <Outlet />
      </main>
      <DashboardFooter />

      {/* Floating Chat Button + Window */}
      <div className="fixed bottom-6 right-6 z-50">
        {!isChatOpen && (
          <button
            onClick={() => setIsChatOpen(true)}
            className="bg-green-600 hover:bg-green-700 text-white rounded-full p-4 shadow-lg transition-all"
          >
            <MessageCircle className="h-6 w-6" />
          </button>
        )}

        {isChatOpen && (
          <div className="w-[420px] h-[520px] bg-white rounded-2xl shadow-2xl border border-gray-200 overflow-hidden flex flex-col animate-fadeIn">
            {/* Header */}
            <div className="flex items-center justify-between bg-green-600 text-white p-3">
              <h2 className="text-lg font-semibold">{translations[language].assistantName}</h2>
              <div className="flex gap-2">
                <button
                  onClick={handleLanguageChange}
                  className="bg-white text-green-700 p-1.5 rounded-lg hover:bg-green-50"
                  title="Change Language"
                >
                  <Globe className="h-5 w-5" />
                </button>
                <button onClick={() => setIsChatOpen(false)}>
                  <X className="h-5 w-5" />
                </button>
              </div>
            </div>

            {/* Chat Body */}
            <div className="flex-1 p-4 overflow-y-auto space-y-3 text-sm">
              {(messages.length > 0 ? messages : initialMessages).map((msg, i) => (
                <div
                  key={i}
                  className={`flex ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`}
                >
                  <div
                    className={`px-3 py-2 rounded-lg max-w-[75%] ${
                      msg.sender === 'user'
                        ? 'bg-green-600 text-white rounded-br-none'
                        : 'bg-gray-100 text-gray-800 rounded-bl-none'
                    }`}
                  >
                    {msg.text}
                  </div>
                </div>
              ))}
            </div>

            {/* Input Area */}
            <div className="p-3 border-t flex items-center">
              <input
                type="text"
                value={input}
                onChange={(e) => setInput(e.target.value)}
                placeholder={translations[language].placeholder}
                className="flex-1 border rounded-lg px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-green-400"
                onKeyDown={(e) => e.key === 'Enter' && handleSend()}
              />
              <button
                onClick={handleSend}
                className="ml-2 bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg text-sm"
              >
                {translations[language].send}
              </button>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}